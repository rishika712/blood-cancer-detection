from flask import Flask, request, render_template
import tensorflow as tf
import numpy as np

app = Flask(__name__)

# Load your pre-trained model (assuming it's saved as "model.h5" in the same directory as app.py)
model = tf.keras.models.load_model('model.h5')

@app.route('/')
def home():
    return render_template('login.html')

@app.route('/register')
def register():
    return render_template('register.html')

@app.route('/login')
def login():
    # Login logic here
    return render_template('upload.html')

@app.route('/predict', methods=['POST'])
def predict():
    imagefile = request.files['imagefile']
    image_path = "./images/" + imagefile.filename
    imagefile.save(image_path)

    image = tf.keras.preprocessing.image.load_img(image_path, target_size=(224, 224))
    input_arr = tf.keras.preprocessing.image.img_to_array(image)
    input_arr = np.array([input_arr])  # Convert single image to a batch.
    predictions = model.predict(input_arr)
    # process your result for human
    pred_result = predictions[0]
    return render_template('result.html', prediction=pred_result)

if __name__ == '__main__':
    app.run(debug=True)
